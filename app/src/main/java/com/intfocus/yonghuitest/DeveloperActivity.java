package com.intfocus.yonghuitest;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.ListView;import android.widget.TextView;import com.intfocus.yonghuitest.setting.ShowListMsgActivity;import com.intfocus.yonghuitest.util.FileUtil;import com.intfocus.yonghuitest.util.HttpUtil;import com.intfocus.yonghuitest.util.K;import java.io.File;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;public class DeveloperActivity extends BaseActivity {    private ArrayAdapter<String> mListAdapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_developer);        initSettingListItem();    }    /*     * 个人信息页菜单项初始化     */    private void initSettingListItem() {        ArrayList<String> listItem = new ArrayList<>();        String[] itemName = {"报表缓存数据列表", "请求头缓存列表", "配置文件列表", "应用诊断"};        for (int i = 0; i < itemName.length; i++) {            listItem.add(itemName[i]);        }        mListAdapter = new ArrayAdapter(this, R.layout.list_item_setting, R.id.item_setting, listItem);        ListView listView = (ListView) findViewById(R.id.list_setting);        listView.setAdapter(mListAdapter);        listView.setOnItemClickListener(mListItemListener);    }    /*     * 个人信息菜单项点击事件     */    private ListView.OnItemClickListener mListItemListener = new ListView.OnItemClickListener() {        @Override        public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {            TextView mItemText = (TextView) arg1.findViewById(R.id.item_setting);            switch (mItemText.getText().toString()) {                case "报表缓存数据列表" :                    SharedPreferences sp = getSharedPreferences("subjectCache", MODE_PRIVATE);                    String cache = sp.getString("cache","");                    if (cache.equals("")){                        toast("无缓存报表");                    }else {                        Intent intent = new Intent(DeveloperActivity.this, ShowListMsgActivity.class);                        intent.putExtra("type", "subjectCache");                        intent.putExtra("title","报表缓存数据列表");                        startActivity(intent);                    }                    break;                case "请求头缓存列表" :                    String cacheHeaderPath = FileUtil.dirPath(mAppContext, "HTML", K.kCachedHeaderConfigFileName);                    if (new File(cacheHeaderPath).exists()){                        Intent intent = new Intent(DeveloperActivity.this, ShowListMsgActivity.class);                        intent.putExtra("type", "cacheHeaders");                        intent.putExtra("title","配置文件列表");                        startActivity(intent);                    }else {                        toast("请求头缓存文件不存在");                    }                    break;                case "配置文件列表" :                    Intent configIntent = new Intent(DeveloperActivity.this, ShowListMsgActivity.class);                    configIntent.putExtra("type","config");                    configIntent.putExtra("title","配置文件列表");                    startActivity(configIntent);                    break;                case "应用诊断" :                    new Thread(new Runnable() {                        @Override                        public void run() {                            Map<String, String> response = HttpUtil.httpGet(K.kBaseUrl, new HashMap<String, String>());                            Log.d("aaaa", response.toString());                            if (response.containsKey("code") && response.get("code").equals("200")){                                runOnUiThread(new Runnable() {                                    @Override                                    public void run() {                                        toast("应用可以访问");                                    }                                });                            }                        }                    }).start();                    break;            }        }    };    public void dismissActivity(View v) {        DeveloperActivity.this.onBackPressed();    }}